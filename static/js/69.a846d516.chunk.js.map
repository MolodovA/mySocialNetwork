{"version":3,"file":"static/js/69.a846d516.chunk.js","mappings":"mMACA,EAAwB,yBAAxB,EAAgE,gCAAhE,EAA2G,4BAA3G,EAAoJ,8BAApJ,EAAgM,+BAAhM,EAAsO,wBAAtO,EAAuQ,0BAAvQ,EAAwS,wBAAxS,EAAqU,sBAArU,EAAiW,uB,mBCEpVA,EAAyB,SAACC,GAAD,OACpCA,EAAMC,iBAAiBC,qBACZC,EAAU,SAACH,GAAD,OAA2CA,EAAMC,kBAE3DG,EAAqB,SAACJ,GAAD,OAChCA,EAAMC,iBAAiBI,iBAEZC,EAAc,SAACN,GAAD,OACzBA,EAAMC,iBAAiBM,U,mBCKZC,EAAO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KACfP,GAAsBQ,EAAAA,EAAAA,IAAYX,GAClCY,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAmBC,UAAWC,EAA9B,UACE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASC,GAAE,mBAAcN,EAAKO,IAA9B,UACE,gBACEH,UAAWC,EACXG,IAAKR,EAAKS,OAASC,EAAaV,EAAKS,OACrCE,IAAI,mBAGR,SAAC,KAAD,CAASL,GAAE,mBAAcN,EAAKO,IAA9B,UACE,gBAAKH,UAAWC,EAAhB,SAA6BL,EAAKY,UAGpC,gBAAKR,UAAWC,EAAhB,SAA2BL,EAAKO,MAEhC,yBACGP,EAAKa,UACJ,mBACET,UAAWC,EACXS,SAAUrB,EAAoBsB,MAAK,SAAAR,GAAE,OAAIA,IAAOP,EAAKO,MACrDS,QAAS,WACPd,GAASe,EAAAA,EAAAA,IAAqBjB,EAAKO,MAJvC,uBAUA,mBACEH,UAAWC,EACXS,SAAUrB,EAAoBsB,MAAK,SAAAR,GAAE,OAAIA,IAAOP,EAAKO,MACrDS,QAAS,WACPd,GAASgB,EAAAA,EAAAA,IAAmBlB,EAAKO,MAJrC,0BA3BEP,EAAKO,KCLNY,EAAY,WASvB,IARA,IAAMC,GAAOnB,EAAAA,EAAAA,IAAYP,GACnBE,GAAkBK,EAAAA,EAAAA,IAAYN,GAC9BG,GAAWG,EAAAA,EAAAA,IAAYJ,GACvBK,GAAWC,EAAAA,EAAAA,MAEXkB,EAAkBC,KAAKC,KAAK3B,EAAkBE,GAC9C0B,EAAQ,GAELC,EAAI,EAAGA,GAAKJ,EAAiBI,IACpCD,EAAME,KAAKD,GAEb,IAEME,EAAeL,KAAKC,KAAKF,EAFX,IAGpB,GAA0CO,EAAAA,EAAAA,UAhBV,GAgBhC,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAJc,IAKjBF,EAlB6B,KAmB1BG,EANc,GAMWH,GAE/BI,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,IAAqBd,EAAKe,YAAaf,EAAKtB,aACpD,IAMH,OACE,iBAAKM,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,UACGwB,EAhCyB,IAiCxB,UAACO,EAAA,EAAD,CACEC,QAAQ,YACRrB,QAAS,WACPc,EAAiBD,EApCG,IAiCxB,UAMG,IANH,UAUDL,EACEc,QAAO,SAAAC,GAAC,OAAIA,EAAIR,GAAyBQ,EAAIP,KAC7CQ,KAAI,SAAAD,GAAC,OACJ,mBAEEnC,UAAWgB,EAAKe,cAAgBI,EAAIlC,EAAoBA,EACxDW,QAAS,kBAxBE,SAACuB,GACtBrC,GAASgC,EAAAA,EAAAA,IAAqBK,EAAGnB,EAAKtB,WAuBb2C,CAAeF,IAHhC,SAKGA,GAJIA,MAQVZ,EAAeE,IACd,UAACO,EAAA,EAAD,CACEC,QAAQ,YACRrB,QAAS,WACPc,EAAiBD,EA3DG,IAwDxB,UAMG,IANH,aAYHT,EAAKsB,MAAMF,KAAI,SAAAxC,GAAI,OAClB,SAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKO","sources":["webpack://project-1/./src/components/FindUsers/FileUsers.module.scss?cb07","redux/selectors/selectorsUsers/selectorsUsers.ts","components/FindUsers/User.tsx","components/FindUsers/FindUsers.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users\":\"FileUsers_users__gBuWr\",\"userCardSize\":\"FileUsers_userCardSize__zZtmg\",\"userCard\":\"FileUsers_userCard__tPY-x\",\"pagination\":\"FileUsers_pagination__Q62Zm\",\"currentPage\":\"FileUsers_currentPage__ImHGA\",\"page\":\"FileUsers_page__2iL70\",\"avatar\":\"FileUsers_avatar__afCIm\",\"name\":\"FileUsers_name__EX7Iv\",\"id\":\"FileUsers_id__7iJVm\",\"btn\":\"FileUsers_btn__6KbER\"};","import { initialStateType } from 'redux/reducers';\r\nimport { AppStateType } from 'redux/store/reduxStore';\r\n\r\nexport const getFollowingIsProgress = (state: AppStateType): string[] =>\r\n  state.findUsersReducer.followingIsProgress;\r\nexport const getData = (state: AppStateType): initialStateType => state.findUsersReducer;\r\n\r\nexport const getTotalUsersCount = (state: AppStateType): number =>\r\n  state.findUsersReducer.totalUsersCount;\r\n\r\nexport const getPageSize = (state: AppStateType): number =>\r\n  state.findUsersReducer.pageSize;\r\n","import React from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport userAvatar from '../../assets/images/userAvatar.png';\r\n\r\nimport style from './FileUsers.module.scss';\r\n\r\nimport { userType } from 'redux/reducers';\r\nimport { getFollowingIsProgress } from 'redux/selectors/selectorsUsers/selectorsUsers';\r\nimport { followThunkCreater, unFollowThunkCreater } from 'redux/thunks';\r\n\r\ntype UserTypeProps = {\r\n  user: userType;\r\n};\r\nexport const User = ({ user }: UserTypeProps): any => {\r\n  const followingIsProgress = useSelector(getFollowingIsProgress);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div key={user.id} className={style.userCardSize}>\r\n      <div className={style.userCard}>\r\n        <NavLink to={`/profile/${user.id}`}>\r\n          <img\r\n            className={style.avatar}\r\n            src={user.photos ? userAvatar : user.photos}\r\n            alt=\"UsersAvatar\"\r\n          />\r\n        </NavLink>\r\n        <NavLink to={`/profile/${user.id}`}>\r\n          <div className={style.name}>{user.name}</div>\r\n        </NavLink>\r\n\r\n        <div className={style.id}>{user.id}</div>\r\n\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              className={style.btn}\r\n              disabled={followingIsProgress.some(id => id === user.id)}\r\n              onClick={() => {\r\n                dispatch(unFollowThunkCreater(user.id));\r\n              }}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className={style.btn}\r\n              disabled={followingIsProgress.some(id => id === user.id)}\r\n              onClick={() => {\r\n                dispatch(followThunkCreater(user.id));\r\n              }}\r\n            >\r\n              follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\n\nimport { Button } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport style from './FileUsers.module.scss';\nimport { User } from './User';\n\nimport {\n  getData,\n  getPageSize,\n  getTotalUsersCount,\n} from 'redux/selectors/selectorsUsers/selectorsUsers';\nimport { getUsersThunkCreater } from 'redux/thunks';\n\nconst defaultValuePortionNumber = 1;\nexport const FindUsers = (): any => {\n  const data = useSelector(getData);\n  const totalUsersCount = useSelector(getTotalUsersCount);\n  const pageSize = useSelector(getPageSize);\n  const dispatch = useDispatch();\n\n  const totalPagesCount = Math.ceil(totalUsersCount / pageSize);\n  const pages = [];\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i <= totalPagesCount; i++) {\n    pages.push(i);\n  }\n  const portionSize = 11;\n\n  const portionCount = Math.ceil(totalPagesCount / portionSize);\n  const [portionNumber, setPortionNumber] = useState(defaultValuePortionNumber);\n  const leftPortionPageNumber =\n    (portionNumber - defaultValuePortionNumber) * portionSize + defaultValuePortionNumber;\n  const rigthPortionPageNumber = portionNumber * portionSize;\n\n  useEffect(() => {\n    dispatch(getUsersThunkCreater(data.currentPage, data.pageSize));\n  }, []);\n\n  const onPageChandler = (p: number): void => {\n    dispatch(getUsersThunkCreater(p, data.pageSize));\n  };\n\n  return (\n    <div className={style.users}>\n      <div className={style.pagination}>\n        {portionNumber > defaultValuePortionNumber && (\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setPortionNumber(portionNumber - defaultValuePortionNumber);\n            }}\n          >\n            {' '}\n            Prev\n          </Button>\n        )}\n        {pages\n          .filter(p => p > leftPortionPageNumber && p < rigthPortionPageNumber)\n          .map(p => (\n            <button\n              key={p}\n              className={data.currentPage === p ? style.currentPage : style.page}\n              onClick={() => onPageChandler(p)}\n            >\n              {p}\n            </button>\n          ))}\n\n        {portionCount > portionNumber && (\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setPortionNumber(portionNumber + defaultValuePortionNumber);\n            }}\n          >\n            {' '}\n            Next\n          </Button>\n        )}\n      </div>\n\n      {data.users.map(user => (\n        <User key={user.id} user={user} />\n      ))}\n    </div>\n  );\n};\n"],"names":["getFollowingIsProgress","state","findUsersReducer","followingIsProgress","getData","getTotalUsersCount","totalUsersCount","getPageSize","pageSize","User","user","useSelector","dispatch","useDispatch","className","style","to","id","src","photos","userAvatar","alt","name","followed","disabled","some","onClick","unFollowThunkCreater","followThunkCreater","FindUsers","data","totalPagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rigthPortionPageNumber","useEffect","getUsersThunkCreater","currentPage","Button","variant","filter","p","map","onPageChandler","users"],"sourceRoot":""}
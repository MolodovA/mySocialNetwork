{"version":3,"file":"static/js/377.e73fa1e2.chunk.js","mappings":"kMACA,GAAgB,QAAU,yBAAyB,eAAiB,gCAAgC,aAAe,8BAA8B,kBAAoB,mCAAmC,cAAgB,+BAA+B,cAAgB,+BAA+B,eAAiB,gCAAgC,iBAAmB,kCAAkC,kBAAoB,oC,mBCSnZA,EAAc,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAC1BC,EAAI,kBAAcF,GACxB,OACE,eAAIG,UAAWC,EAAAA,cAAf,UACE,SAAC,KAAD,CAAMC,GAAIH,EAAV,SAAiBD,OCLVK,EAAc,SAAC,GAAD,EAAGN,GAAH,IAAOO,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACzB,iBAAKL,UAAWC,EAAAA,eAAhB,WACE,gBAAKD,UAAWC,EAAAA,iBAAhB,SAAyCI,KACzC,gBAAKL,UAAWC,EAAAA,kBAAhB,SAA0CG,Q,SCsBjCE,GAAmBC,EAAAA,EAAAA,KAbR,SAACC,GAAD,MAA2C,CACjEC,YAAaD,EAAME,eACnBC,OAAQH,EAAMI,KAAKD,WAEM,SAACE,GAAD,MAAiD,CAC1EC,eAAgB,aAGhBC,iBAAkB,SAACC,QAKWT,ECrBT,SAAC,GAKC,IAJvBE,EAIsB,EAJtBA,YACAM,EAGsB,EAHtBA,iBACAD,EAEsB,EAFtBA,eACAH,EACsB,EADtBA,OAGMM,EAAiBR,EAAYS,YAAYC,KAAI,SAAAC,GAAC,OAClD,SAACxB,EAAD,CAAwBC,GAAIuB,EAAEvB,GAAIC,KAAMsB,EAAEtB,MAAxBsB,EAAEvB,OAEhBwB,EAAiBZ,EAAYa,YAAYH,KAAI,SAAAI,GAAC,OAClD,SAACpB,EAAD,CAAwBN,GAAI0B,EAAE1B,GAAIO,QAASmB,EAAEnB,QAASC,OAAQkB,EAAElB,QAA9CkB,EAAE1B,OAECY,EAAYO,eAUnC,OAAKL,GAGH,iBAAKX,UAAWwB,EAAAA,QAAhB,WACE,eAAIxB,UAAWwB,EAAAA,eAAf,sBACA,iBAAKxB,UAAWwB,EAAAA,aAAhB,WACE,gBAAKxB,UAAWwB,EAAAA,gBAAhB,UACE,eAAIxB,UAAWwB,EAAAA,cAAf,SAAiCP,OAEnC,gBAAKjB,UAAS,UAAKwB,EAAAA,gBAAL,YAA0BA,EAAAA,mBAAxC,UACE,gBAAKxB,UAAWwB,EAAAA,SAAhB,UACE,iBAAKxB,UAAWwB,EAAAA,gBAAhB,WACE,yBAAMH,KACN,SAACI,EAAA,EAAD,CACEC,MAAM,QACNC,eApBa,SAACC,GAC1B,IAAMC,EAAOD,EAAEE,cAAcC,MAC7BhB,EAAiBc,IAmBLG,YAxBgB,WAC5BlB,qBAOkB,SAAC,KAAD,CAAUmB,SAAO,EAAC/B,GAAG","sources":["webpack://project-1/./src/components/Dialogs/Dialogs.module.scss?d037","components/Dialogs/dialogsItem/DialogsItem.tsx","components/Dialogs/messageItem/MessageItem.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__xWK+y\",\"dialogs__title\":\"Dialogs_dialogs__title__0BTNX\",\"dialogs__row\":\"Dialogs_dialogs__row__CK3sd\",\"dialogs__column_b\":\"Dialogs_dialogs__column_b__JAvIM\",\"dialogs__list\":\"Dialogs_dialogs__list__y9B4E\",\"dialogs__item\":\"Dialogs_dialogs__item__jVBL7\",\"messages__item\":\"Dialogs_messages__item__6dyW7\",\"messages__avatar\":\"Dialogs_messages__avatar__C002y\",\"messages__message\":\"Dialogs_messages__message__R+oTU\"};","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport style from '../Dialogs.module.scss';\r\n\r\nexport type DialogsItemPropsType = {\r\n  id: string;\r\n  name: string;\r\n};\r\nexport const DialogsItem = ({ id, name }: DialogsItemPropsType): any => {\r\n  const path = `/dialog/${id}`;\r\n  return (\r\n    <li className={style.dialogs__item}>\r\n      <Link to={path}>{name}</Link>\r\n    </li>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport style from '../Dialogs.module.scss';\r\n\r\nexport type MessageItemPropsType = {\r\n  id: string;\r\n  avatar: string;\r\n  message: string;\r\n};\r\nexport const MessageItem = ({ id, message, avatar }: MessageItemPropsType): any => (\r\n  <div className={style.messages__item}>\r\n    <div className={style.messages__avatar}>{avatar}</div>\r\n    <div className={style.messages__message}>{message}</div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { Dialogs } from './Dialogs';\r\n\r\nimport { createNewMessageAC, DialogsPageType, sendMessageAC } from 'redux/reducers';\r\nimport { AppStateType } from 'redux/store/reduxStore';\r\n\r\ntype MapStateToProps = {\r\n  dialogsPage: DialogsPageType;\r\n  isAuth: boolean;\r\n};\r\n\r\ntype MapDispatchToPropsType = {\r\n  sendNewMessage: () => void;\r\n  newMessageChange: (newMessageText: string) => void;\r\n};\r\nexport type DialogsType = MapStateToProps & MapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToProps => ({\r\n  dialogsPage: state.DialogsReducer,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => ({\r\n  sendNewMessage: () => {\r\n    // dispatch(sendMessageAC());\r\n  },\r\n  newMessageChange: (newMessageText: string) => {\r\n    // dispatch(createNewMessageAC(newMessageText));\r\n  },\r\n});\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n","import React, { ChangeEvent } from 'react';\r\n\r\nimport { TextField } from '@mui/material';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field } from 'redux-form';\r\n\r\nimport s from './Dialogs.module.scss';\r\nimport { DialogsType } from './DialogsContainer';\r\nimport { DialogsItem } from './dialogsItem/DialogsItem';\r\nimport { MessageItem } from './messageItem/MessageItem';\r\n\r\nimport ItemAdd from 'components/common/itemAdd/ItemAdd';\r\n\r\nexport const Dialogs = ({\r\n  dialogsPage,\r\n  newMessageChange,\r\n  sendNewMessage,\r\n  isAuth,\r\n}: DialogsType): any => {\r\n  // data\r\n  const newDialogsData = dialogsPage.dialogsData.map(u => (\r\n    <DialogsItem key={u.id} id={u.id} name={u.name} />\r\n  ));\r\n  const newMessageData = dialogsPage.messageData.map(m => (\r\n    <MessageItem key={m.id} id={m.id} message={m.message} avatar={m.avatar} />\r\n  ));\r\n  const newMessageBody = dialogsPage.newMessageText;\r\n\r\n  const onSendNewMessageClick = (): void => {\r\n    sendNewMessage();\r\n  };\r\n  const onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const body = e.currentTarget.value;\r\n    newMessageChange(body);\r\n  };\r\n\r\n  if (!isAuth) return <Navigate replace to=\"/Login\" />;\r\n  // ui\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <h2 className={s.dialogs__title}>Dialogs</h2>\r\n      <div className={s.dialogs__row}>\r\n        <div className={s.dialogs__column}>\r\n          <ul className={s.dialogs__list}>{newDialogsData}</ul>\r\n        </div>\r\n        <div className={`${s.dialogs__column} ${s.dialogs__column_b}`}>\r\n          <div className={s.messages}>\r\n            <div className={s.messages__items}>\r\n              <div>{newMessageData}</div>\r\n              <ItemAdd\r\n                title=\" Send\"\r\n                callbackChange={onNewMessageChange}\r\n                callbackAdd={onSendNewMessageClick}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["DialogsItem","id","name","path","className","style","to","MessageItem","message","avatar","DialogsContainer","connect","state","dialogsPage","DialogsReducer","isAuth","auth","dispatch","sendNewMessage","newMessageChange","newMessageText","newDialogsData","dialogsData","map","u","newMessageData","messageData","m","s","ItemAdd","title","callbackChange","e","body","currentTarget","value","callbackAdd","replace"],"sourceRoot":""}